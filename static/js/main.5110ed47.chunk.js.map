{"version":3,"sources":["components/Header.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","dark","children","className","items","to","Link","length","map","item","key","App","state","Dark","document","title","Config","Name","this","Sections","section","target","rel","href","id","Content","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"iNAkCeA,EAhCA,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KAEpD,OADAL,EAASA,EAAO,OAAS,QAErB,sBACIE,UACI,+BAAwBF,EAAxB,eAAmCA,IAClCE,EAAY,IAAMA,EAAY,KAC9BC,GAASA,EAAMG,OAAS,oBAAsB,IAJvD,UAOKF,EACG,cAACC,EAAD,CAAMD,GAAIA,EAAIF,UAAU,eAAxB,SACKD,IAGL,sBAAMC,UAAU,eAAhB,SAAgCD,IAEnCE,GAASA,EAAMG,OAAS,GACrB,qBAAKJ,UAAU,2BAAf,SACI,oBAAIA,UAAU,qBAAd,SACKC,EAAMI,KAAI,SAACC,EAAMC,GAAP,OACP,oBAAIP,UAAU,WAAd,SACKM,GADyBC,cC8B3CC,E,4MAhDXC,MAAQ,CACJC,MAAM,G,uDAGV,WACIC,SAASC,MAAQC,EAAOC,KAAO,iB,oBAGnC,WACI,OAAO,sBAAKd,UAAU,MAAf,UACH,cAAC,EAAD,CAAQA,UAAU,mBAAmBF,KAAMiB,KAAKN,MAAMC,KAC9CT,MAAOY,EAAOG,SAASX,KAAI,SAAAY,GAAO,OAC9B,mBACIjB,UAAU,WACVkB,OAAQD,EAAQd,KAAO,SAAW,KAClCgB,IAAI,WACJC,KAAMH,EAAQd,KAAOc,EAAQd,KAAO,IAAMc,EAAQH,KAJtD,SAQKG,EAAQH,MAHJG,EAAQH,SAP7B,SAcKD,EAAOC,OAEXD,EAAOG,SAASX,KAAI,SAAAY,GAAO,OAAIA,EAAQd,KAAO,KAC3C,yBAASkB,GAAIJ,EAAQH,KAArB,SACI,qBAAKd,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,SAAf,SACI,oCACI,6BAAKiB,EAAQH,OACb,4BAAIG,EAAQK,oBANAL,EAAQH,gB,GA5BtCS,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASyB,eAAe,SAM1BZ,K","file":"static/js/main.5110ed47.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = ({ dark, children, className, items, to, Link }) => {\r\n    dark = !!dark ? \"dark\" : \"light\";\r\n    return (\r\n        <nav\r\n            className={\r\n                `Header navbar navbar-${dark} bg-${dark}` +\r\n                (className ? \" \" + className : \"\") +\r\n                (items && items.length ? \" navbar-expand-lg\" : \"\")\r\n            }\r\n        >\r\n            {to ? (\r\n                <Link to={to} className=\"navbar-brand\">\r\n                    {children}\r\n                </Link>\r\n            ) : (\r\n                <span className=\"navbar-brand\">{children}</span>\r\n            )}\r\n            {items && items.length > 0 && (\r\n                <div className=\"collapse navbar-collapse\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        {items.map((item, key) => (\r\n                            <li className=\"nav-item\" key={key}>\r\n                                {item}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\nimport Config from '../constants/config.json';\r\nimport Header from './Header.js';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        Dark: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = Config.Name + \"'s Portfolio\"\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"App\">\r\n            <Header className=\"Header fixed-top\" dark={this.state.Dark}\r\n                    items={Config.Sections.map(section => (\r\n                        <a\r\n                            className=\"nav-link\"\r\n                            target={section.Link ? \"_blank\" : null}\r\n                            rel=\"noopener\"\r\n                            href={section.Link ? section.Link : \"#\" + section.Name}\r\n                            key={section.Name}\r\n                        >\r\n\r\n                            {section.Name}\r\n                        </a>\r\n                    ))}\r\n            >\r\n                {Config.Name}\r\n            </Header>\r\n            {Config.Sections.map(section => section.Link ? null : (\r\n                <section id={section.Name} key={section.Name}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <article>\r\n                                    <h2>{section.Name}</h2>\r\n                                    <p>{section.Content}</p>\r\n                                </article>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </section>\r\n            ))}\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport styles from './styles/index.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}